<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId>Ainsworth.Extensions</PackageId>
    <Product>Ainsworth.Extensions</Product>
    <AssemblyTitle>Ainsworth.Extensions</AssemblyTitle>
    <Description>Extension methods to make built-in static methods appear available as instance methods. For example, Char.IsLetter(c) can be written c.IsLetter(). This package adds no new functionality. It just enables method chaining and makes interfaces to some System classes a bit more fluent.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <!-- <TargetFrameworks>net8.0;netstandard2.0;netstandard2.1</TargetFrameworks> -->
    <TargetFrameworks>netstandard2.1;netstandard2.0</TargetFrameworks>
    <PackRelease>true</PackRelease>
    <AnalysisMode>All</AnalysisMode>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../README.md" Pack="true" PackagePath="/" />
    <None Include="../LICENSE" Pack="true" PackagePath="/" />
  </ItemGroup>

  <Target Name="GitVersionUpdate" BeforeTargets="DispatchToInnerBuilds">
    <Exec Command="echo IsCrossTargetingBuild = '$(IsCrossTargetingBuild)'" EchoOff="true" />
    <Exec Command="../util/gitversion.sh update $(TargetFramework) $(Configuration)" />
  </Target>

  <Target Name="GitVersionClean" AfterTargets="Clean" Condition="'$(IsCrossTargetingBuild)' == 'true'">
    <Exec Command="echo IsCrossTargetingBuild = '$(IsCrossTargetingBuild)'" EchoOff="true" />
    <Exec Command="../util/gitversion.sh clean" />
  </Target>

</Project>
